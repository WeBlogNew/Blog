<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.threeFarmer.dao.article.IArticleDao">
  <resultMap id="ArticleResult" type="Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="view_rank" jdbcType="INTEGER" property="viewRank" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="writer" jdbcType="VARCHAR" property="writer" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="pub_time" jdbcType="TIMESTAMP" property="pubTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="thumbnail" jdbcType="VARCHAR" property="thumbnail" />
    <result column="last_reply" jdbcType="TIMESTAMP" property="lastReply" />
    <result column="can_reply" jdbcType="INTEGER" property="canReply" />
    <result column="good_num" jdbcType="INTEGER" property="goodNum" />
    <result column="bad_num" jdbcType="INTEGER" property="badNum" />
    <result column="check_admin" jdbcType="INTEGER" property="checkAdmin" />
  </resultMap>

  <select id="findById" resultMap="ArticleResult">
    select * from tbl_article
    where id = #{id}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from tbl_article
    where id = #{id}
  </delete>
  <insert id="save" parameterType="Article" useGeneratedKeys="true" keyProperty="id">
    insert into tbl_article (title, member_id, create_time, description, keywords, view_rank,
      writer, source, pub_time, thumbnail, content)
    values (#{title}, #{memberId}, now(), #{description}, #{keywords}, #{viewRank},
      #{writer}, #{source}, now(), #{thumbnail}, #{content})
  </insert>
  <update id="updateViewCount" parameterType="java.lang.Integer">
    update tbl_article set view_count=view_count+1 where id=${articleId}
  </update>
  <update id="update" parameterType="Article">
    update tbl_article
    <set>
      update_time = now(),
      <if test="title != null">title = #{title},</if>
      <if test="description != null">description = #{description},</if>
      <if test="keywords != null">keywords = #{keywords},</if>
      <if test="writer != null">writer = #{writer},</if>
      <if test="source != null">source = #{source},</if>
      <if test="thumbnail != null">thumbnail = #{thumbnail},</if>
      <if test="canReply != null">can_reply = #{canReply},</if>
      <if test="content != null">content = #{content},</if>
    </set>
    where id = #{id}
  </update>

  <update id="audit">
    update tbl_article set status=(CASE WHEN status=0 THEN 1 ELSE 0 END)
    where id = #{id}
  </update>

  <update id="favor">
    update tbl_article set favor = favor + #{num} where id = #{id}
  </update>

  <select id="listByPage" resultMap="ArticleResult">
    SELECT * from tbl_article a
    <where>
      <if test="key != null and key != ''">
        and (a.description LIKE #{key} or a.title like #{key})
      </if>
      and a.status = #{status}
      <if test="memberId != null">
        and a.member_Id = #{memberId}
      </if>
    </where>
    ORDER BY a.id DESC
  </select>
</mapper>